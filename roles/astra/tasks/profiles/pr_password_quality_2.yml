---

    - name: ПУД1 | проверка сопадения с эталоном строк 
      become: yes
      shell: "{{pam_unix_2}}"
      # loop:
        # - "{{pswd_auth_1}}"
        # - "{{pam_unix_1}}"
        # - "{{pam_unix_2}}"
      changed_when: false
      failed_when: false
      # no_log: true
      # ignore_errors: true
      register: var_passwords_active
      # no_log: true
      tags:
        - pr_password_quality_2
        # - system_auth

    - name: ПУД1 | проверка наличия и активности локальных параметров пароля в /etc/pam.d/common-password
      debug: 
        msg: 
          - "  "
          # - "----------------строка эталон-----------------------  "
          # - "\'{{  item.0 }}\' is present: {{  (item.1.stdout_lines == []) | ternary('no', 'yes') }}"  
          - "----------------------------------------------------  "
          - "-- строка присутствует => {{(not (var_passwords_active.rc)) | ternary('да', 'нет')}}"
          # - " ------>>>> "
          - "----------------------------------------------------  "
          # - "  "
      # loop: "{{['password required pam_pwhistory.so remember=24', 'pam_unix.so sha512 shadow use_authtok'] | zip(var_passwords_active.results) | list }}"      #
      # loop: "{{ | zip(var_passwords_active) | list }}"
      ignore_errors: true
      # when: var_passwords_set is defined
      tags:
        - pr_password_quality_2
        - write_log

    - name: ПУД1 | эталонные значения параметров
      become: yes
      shell: "echo {{var_passwords_active.stdout}} | egrep {{params_regex}}"
      loop: "{{profile_common_password_var}}"
      changed_when: false
      failed_when: false
      # no_log: true
      # ignore_errors: true
      when: var_passwords_active.stdout != ''
      register: var_passwords_params
      # no_log: true
      tags:
        - pr_password_quality_2

    - name: ПУД1 | проверка совпадения параметров локального пароля с эталонным значением
      debug: 
        msg: 
          - "  "
          - "----------------------------------------------------  "
          # - "\'{{  item.0 }}\' is present: {{  (item.1.stdout_lines == []) | ternary('no', 'yes') }}"  
          - "-->> '{{ (item.0)[:] | join(' ') }}' => {{(item.1.stdout != '') | ternary('да', 'нет')}}              "
          - "----------------------------------------------------  "
          # - "  "
      # loop: "{{['password required pam_pwhistory.so remember=24', 'pam_unix.so sha512 shadow use_authtok'] | zip(var_passwords_active.results) | list }}"      #
      loop: "{{(profile_common_password_var) | zip(var_passwords_params.results) | list}}"
      when: var_passwords_active.stdout != ''
      ignore_errors: true
      # when: var_passwords_set is defined
      tags:
        - pr_password_quality_2
        - write_log

    # - name: ПУД1 | !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    #   debug: 
    #     msg: 
    #       - "  "
    #       - "----------------------------------------------------  "
    #       # - "\'{{  item.0 }}\' is present: {{  (item.1.stdout_lines == []) | ternary('no', 'yes') }}"  
    #       - "{{ var_passwords_active.stdout }}"
    #       - "----------------------------------------------------  "
    #       - "  "
    #   # loop: "{{['password required pam_pwhistory.so remember=24', 'pam_unix.so sha512 shadow use_authtok'] | zip(var_passwords_active.results) | list }}"      #
    #   ignore_errors: true
    #   # when: var_passwords_set is defined
    #   tags:
    #     - pr_password_quality_2

    - name: ПУД1 | загрузка файла /etc/pam.d/common-password
      fetch:
        flat: yes
        dest: "{{playbook_dir}}/all_info/{{ansible_ssh_host}}/"
        src: "/etc/pam.d/common-password"
      tags:
        - pr_password_quality_2
