---

    - name: ПУД1 | проверка наличия группы wheel
      become: yes
      shell: "getent group | cut -d: -f1 | if egrep -q ^wheel$ ; then echo yes ; else echo nope ; fi"
      changed_when: false
      failed_when: false
      ignore_errors: true
      register: var_group_exists
      tags:
        - wheel_2

    - name: ПУД1 | печать наличия группы wheel
      debug: 
        msg: 
          - "found group wheel: {{ (var_group_exists.stdout) }}"          # есть/нет пользователи
      ignore_errors: true
      when: var_group_exists is defined
      tags:
        - wheel_2


    - name: ПУД1 | проверка отсутствия пользователей в группе wheel
      become: yes
      shell: "getent group | grep ^wheel:* | cut -d: -f4 | if egrep -q ^[[:space:]]*$; then echo yes; else echo nope; fi" 
      changed_when: false
      failed_when: false
      ignore_errors: true
      register: var_group_empty
      when: var_group_exists.stdout != 'nope'
      tags:
        - wheel_2

    - name: ПУД1 | проверка отсутствия пользователей в группе wheel
      become: yes
      shell: "getent group | grep ^wheel:* | cut -d: -f4" 
      changed_when: false
      failed_when: false
      ignore_errors: true
      register: var_group_empty_users
      when: var_group_exists.stdout != 'nope'
      tags:
        - wheel_2

    - name: ПУД1 | печать отсутствия пользователей в группе wheel
      become: yes
      debug: 
        msg: 
          - "group wheel is empty: {{ (var_group_empty.stdout) }}" # вывод наличия пользователей в группе wheel
          - "group wheel users: {{ (var_group_empty_users.stdout) }}" # вывод наличия пользователей в группе wheel
      ignore_errors: true
      when: var_group_exists.stdout != 'nope'
      tags:
        - wheel_2


    - name: ПУД1 | загрузка файла
      fetch:
        flat: yes
        dest: "{{playbook_dir}}/all_info/{{ansible_ssh_host}}/"
        src: "/etc/group"
      tags:
        - wheel_2