--- 

    # - name: ПУД1 | проверка существования параметров пароля
    #   become: yes
    #   shell: 'egrep "^[[:space:]]*#*[[:space:]]*{{item[0] | quote}}[[:space:]]*{{item[1] | quote}}[[:space:]]*[0-9]*[[:space:]]*$" /etc/security/pwquality.conf'
    #   # shell: " echo {{ item[0]}}{{ item[1]}}{{ item[2]}}"
    #   failed_when: false
    #   ignore_errors: true
    #   loop: "{{ pwquality_var }}"
    #   register: var_pw_quality_1
    #   tags:
    #     - pw_quality_1

    # - name: ПУД1 | печать существования параметров пароля 
    #   debug:
    #     msg: 
    #       - "{{idx + 1}}) {{item[0][0]}} {{item[0][1]}} {{'%-8s' | format(item[0][2])}} : {{ (item[1].stdout_lines != []) | ternary('yes', 'no')}} "
    #       # - "res {{item[0][0]}} }} "
    #   ignore_errors: true
    #   loop: "{{ pwquality_var[:] | zip(var_pw_quality_1.results) | list}}"
    #   loop_control:
    #     label: 'IS EXISTS'
    #     index_var: idx
    #   when: var_pw_quality_1 is defined
    #   tags:
    #     - pw_quality_1


    - name: ПУД1 | эталонные параметры локального пароля 
      become: yes
      shell: 'egrep "^[[:space:]]*{{item[0] | quote}}[[:space:]]*{{item[1] | quote}}[[:space:]]*{{item[2] | quote}}[[:space:]]*$" /etc/security/pwquality.conf'
      # shell: " echo {{ item[0]}}{{ item[1]}}{{ item[2]}}"
      failed_when: false
      ignore_errors: true
      loop: "{{ pwquality_var }}"
      register: var_pw_quality_active_1
      tags:
        - pw_quality_1
        - write_log

# "{{idx + 1}}) {{item[0][0]}} {{item[0][1]}} {{'%-8s' | format(item[0][2])}} : {{ (item[1].stdout_lines != []) | ternary('да', 'нет')}} "

    - name: ПУД1 | проверка параметров пароля /etc/security/pwquality.conf
      debug:
        msg: 
          - "{{'{:<5}{:<4}=> '.format(''.join([item[0][0], item[0][1]]), item[0][2]).ljust(24, ' ')}}{{ (item[1].stdout_lines != []) | ternary('задан', 'не задан')}}"
          # - "{{idx + 1}}) {{item[0][0]}} {{item[0][1]}} {{'%-8s' | format(item[0][2])}} : {{ (item[1].stdout_lines != []) | ternary('да', 'нет')}} "
          # - "res {{item[0][0]}} }} "
      ignore_errors: true
      loop: "{{ pwquality_var[:] | zip(var_pw_quality_active_1.results) | list}}"
      # loop_control:
      #   label: 'IS ACTIVE'
      #   index_var: idx
      # when: var_pw_quality_1 is defined
      register: +++++++++++++++
      tags:
        - pw_quality_1
        - write_log

    - name: ПУД1 | проверка параметров пароля /etc/security/pwquality.conf
      debug:
        msg: 
          - "{{pw_quality_1.stdout_lines}}" 
      # loop: "{{}}"
      tags:
        - pw_quality_1
        - write_log

    - name: ПУД1 | загрузка файла
      fetch:
        flat: yes
        dest: "{{playbook_dir}}/all_info/{{ansible_ssh_host}}/"
        src: "/etc/security/pwquality.conf"
      tags:
        - pw_quality_1


























