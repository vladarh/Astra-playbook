--- 
# 13

    - name: ПУД1 | проверка активных пользователей
      become: yes
      # shell: 'getent shadow | grep "^[^:]*:.\?:" | cut -d: -f1'
      shell: 'getent passwd | grep "bash" | cut -d: -f1 | sort -n '
      changed_when: false
      failed_when: false
      # ignore_errors: true
      register: var_passwords_set_1
      tags:
        - pw_quality_3

    - name: ПУД1 | проверка аткивных УЗ без заданного пароля
      become: yes
      # shell: 'getent shadow | grep "^[^:]*:.\?:" | cut -d: -f1'
      shell: 'cat /etc/shadow | egrep "^{{item}}:([\*\!]|):" '
      changed_when: false
      failed_when: false
      loop: "{{var_passwords_set_1.stdout_lines}}"
      # ignore_errors: true
      register: var_passwords_set
      tags:
        - pw_quality_3

    - name: ПУД1 | проверка активных УЗ без пароля
      debug: 
        msg: 
          # - "-----------------------------{{'\\|||/'}}-----------------------  "
          - " Активные УЗ без пароля {{ (var_passwords_set.results)[:] | map(attribute='rc') | list | min | ternary('Нет, внизу должно быть пусто', 'Есть, список внизу')}}            "
          - '----------------------------------------------------------  '
          - "{{ (var_passwords_set.results)[:] | selectattr('stdout', '!=', '\'\'') | map(attribute='stdout') | list }}"
          - "----------------------------------------------------------  "
          # - "  "
      loop: 
      # when:  not item.rc 
      ignore_errors: true
      # when: var_passwords_set is defined
      tags:
        - pw_quality_3
        # - print_action
        - write_log

    - name: ПУД1 | загрузка файла shadow
      fetch:
        flat: yes
        dest: "{{playbook_dir}}/all_info/{{ansible_ssh_host}}/"
        src: "/etc/shadow"
      tags:
        - pw_quality_3