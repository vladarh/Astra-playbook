    - name: ПУД1 | проверка наличия строки auth required pam_wheel.so
      become: yes
      shell: "if egrep -q ^[[:space:]]*#?[[:space:]]*auth[[:space:]]+required[[:space:]]+pam_wheel[.]{1}so[[:space:]]*$ /etc/pam.d/su ; then echo да ; else echo нет ; fi" # 
      changed_when: false
      failed_when: false
      ignore_errors: true
      register: var_string_exists
      tags:
        - wheel_1

    - name: ПУД1 | проверка наличия строки auth required pam_wheel.so
      debug: 
        msg: 
          # - "Total rows : {{ var_allowed_user_not_in_etalon | length }}" # вывод строк не содержащихся в эталонном файле
          # - "{{ (var_string_exists.stdout_lines != []) | ternary('',  '')}}"          # кол-во строк
          # - "{{ (var_string_exists.stdout != '0') | ternary('yes',  'no')}}"          # кол-во строк
          - "--------------------------------------------------"
          - "[auth required pam_wheel.so] есть => {{ (var_string_exists.stdout) }}           "          #
          - "--------------------------------------------------"

      ignore_errors: true
      when: var_string_exists is defined
      tags:
        - wheel_1
        - write_log

    - name: ПУД1 | проверка активности строки
      become: yes
      shell: "if egrep -q ^[[:space:]]*auth[[:space:]]+required[[:space:]]+pam_wheel[.]{1}so[[:space:]]*$ /etc/pam.d/su ; then echo да ; else echo нет ; fi" # то же самое но со строками без #
      changed_when: false
      failed_when: false
      ignore_errors: true
      register: var_string_active
      when: var_string_exists.stdout != 'нет'
      tags:
        - wheel_1

    - name: ПУД1 | проверка активности строки auth required pam_wheel.so
      debug: 
        msg: 
          # - "Total rows : {{ var_allowed_user_not_in_etalon | length }}" # вывод строк не содержащихся в эталонном файле
          # - "{{ (var_string_exists.stdout_lines != []) | ternary('',  '')}}"          # кол-во строк
          # - "{{ (var_string_exists.stdout != '0') | ternary('yes',  'no')}}"          # кол-во строк
          # - "   поиск в /etc/pam.d/su                          "
          - "--------------------------------------------------"
          - "[auth required pam_wheel.so] активна => {{ (var_string_active.stdout) }}           "          # кол-во строк
          - "--------------------------------------------------"
          # - "---------------------->>>{{ansible_os_family}}<<<-----------------"
          # - "---------------------->>>{{ansible_os_family.startswith('Astra Linux')}}<<<-----------------"

      ignore_errors: true
      when: var_string_exists.stdout != 'нет'
      tags:
        - wheel_1
        - write_log


    - name: ПУД1 | загрузка файла
      become: true
      fetch:
        flat: yes
        dest: "{{playbook_dir}}/all_info/{{ansible_ssh_host}}/"
        src: "/etc/pam.d/su"
      tags:
        - wheel_1

    - name: summary +
      shell: "printf '%-20s %15s\n' 'wheel_1 => ' {{(var_string_active is defined) | ternary( (var_string_active.stdout == 'да') |ternary('1', '0'), '0')}} | tee -a  {{log_var}}"
      delegate_to: localhost
      tags:
        - always