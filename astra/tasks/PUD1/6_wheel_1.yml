---
    - block:
            
        - name: ПУД1 | проверка, что файл "/etc/pam.d/su" есть
          become: yes
          raw: "test -f /etc/pam.d/su"
          failed_when: var_file_exists.rc
          register: var_file_exists
          tags:
            - wheel_1

        - name: ПУД1 | проверка наличия строки "auth required pam_wheel.so"
          become: yes
          raw: "egrep ^[[:space:]]*#?[[:space:]]*auth[[:space:]]+required[[:space:]]+pam_wheel[.]{1}so[[:space:]]*$ /etc/pam.d/su " # 
          failed_when: var_string_exists.rc not in [0, 1] # код результата исполнения 0 - пройдена, 1 - не пройдена, 2 - файл не найден , вызов исключнеия если не 0 или 1
          register: var_string_exists
          tags:
            - wheel_1

        - name: ПУД1 | проверка наличия строки "auth required pam_wheel.so"
          debug: 
            msg: 
              - "--------------------------------------------------"
              - "[auth required pam_wheel.so] есть => {{ (not var_string_exists.rc) | ternary('да', 'нет') }}           "          #
              - "--------------------------------------------------"
          # when: var_string_exists is defined
          tags:
            - wheel_1
            - write_log

        - name: ПУД1 | проверка активности строки
          become: yes
          raw: "egrep ^[[:space:]]*auth[[:space:]]+required[[:space:]]+pam_wheel[.]{1}so[[:space:]]*$ /etc/pam.d/su " # то же самое но со строками без #
          failed_when: var_string_active.rc not in [0, 1]
          register: var_string_active
          # when: var_string_exists.stdout != 'нет'
          tags:
            - wheel_1

        - name: ПУД1 | проверка активности строки auth required pam_wheel.so
          debug: 
            msg: 
              - "--------------------------------------------------"
              - "[auth required pam_wheel.so] активна => {{ (not var_string_active.rc) | ternary('да', 'нет') }}           "          # кол-во строк
              - "--------------------------------------------------"
          # when: var_string_exists.stdout != 'нет'
          tags:
            - wheel_1
            - write_log


        # - name: ПУД1 | загрузка файла
        #   become: true
        #   fetch:
        #     flat: yes
        #     dest: "{{playbook_dir}}/all_info/{{ansible_ssh_host}}/"
        #     src: "/etc/pam.d/su"
        #   tags:
        #     - wheel_1

        # - name: summary +
        #   shell: "printf '%-20s %15s\n' 'wheel_1 => ' {{(var_string_active is defined) | ternary( (var_string_active.stdout == 'да') |ternary('true', 'false'), 'false')}} | tee -a  {{log_var}}"
        #   delegate_to: localhost
        #   tags:
        #     - always

        - name: результат прохождения проверок
          set_fact:
            task_result: "{% set passed = (not var_string_active.rc ) %}{{passed}}"
          tags:
            - wheel_1

        - include_tasks: ../summary/sum.yml
          vars:
            task_tag: "{% set tg = 'wheel_1' %}{{ tg }}"
            task_res: "{{ task_result }}"
          tags:
            - wheel_1

      rescue:

        - include_tasks: ../summary/rescue.yml
          vars:
            task_tag_rescue: "{% set tgr = 'wheel_1' %}{{tgr}}"
          tags:
            - always