---
    - block:

        - name: ПУД1 | проверка наличия группы "wheel"
          become: yes
          raw: "getent group | cut -d: -f1 | egrep  ^wheel$"
          failed_when: var_group_exists.rc not in [0, 1] # код результата исполнения 0 - пройдена, 1 - не пройдена, 2 - файл не найден , вызов исключнеия если не 0 или 1
          register: var_group_exists
          tags:
            - wheel_2

        - name: ПУД1 | проверка наличия группы wheel
          debug: 
            msg: 
              - "найдена группа wheel: {{ (not var_group_exists.rc) | ternary('да', 'нет') }}"          # есть/нет пользователи
          # when: var_group_exists is defined
          tags:
            - wheel_2
            - write_log

        - name: ПУД1 | проверка отсутствия пользователей в группе "wheel"
          become: yes
          raw: "getent group | grep ^wheel:* | cut -d: -f4 | egrep -v  ^[[:space:]]*$ | grep ^.*$" 
          failed_when: var_group_empty.rc not in [0, 1] # код результата исполнения 0 - пройдена, 1 - не пройдена, 2 - файл не найден , вызов исключнеия если не 0 или 1
          register: var_group_empty
          # when: var_group_exists.stdout != 'нет'
          tags:
            - wheel_2

        - name: ПУД1 | пользователи в группе "wheel"
          become: yes
          raw: "getent group | grep ^wheel:* | cut -d: -f4" 
          register: var_group_empty_users
          # when: var_group_exists.stdout != 'нет'
          tags:
            - wheel_2

        - name: фильтрация списка пользователей в группе wheel
          set_fact:
            var_wheel_userlist: "{{ var_group_empty_users.stdout | regex_replace('^[\\r\\n\\t]+','') | regex_replace('[\\r\\n\\t]+$','') | regex_replace('[\\r\\n\\t]+','\n') }}"
          tags:
            - wheel_2

        - name: группировка
          set_fact:
            var_wheel_users: "{{  var_wheel_users | default([]) + [ item | trim ]  }}"
          with_items: "{{ (var_wheel_userlist).split('\n') }}"
          tags:
            - wheel_2

        - name: ПУД1 | проверка отсутствия пользователей в группе "wheel"
          become: yes
          debug: 
            msg: 
              - "группа wheel пустая: {{ (var_group_empty.rc) | ternary('да', 'нет')  }}" # вывод наличия пользователей в группе wheel
              - "пользователи группы wheel: " # вывод наличия пользователей в группе wheel
              - "{{ var_wheel_users }}" # вывод наличия пользователей в группе wheel
          # when: var_group_exists.stdout != 'нет'
          tags:
            - wheel_2
            - write_log
            
        # - name: ПУД1 | загрузка файла
        #   fetch:
        #     flat: да
        #     dest: "{{playbook_dir}}/all_info/{{ansible_ssh_host}}/"
        #     src: "/etc/pam.d/su"
        #   tags:
        #     - wheel_2

        # - name: summary +
        #   shell: "printf '%-20s %15s\n' 'wheel_2 => ' {{(var_group_exists.stdout != 'нет') | ternary( (var_group_empty is defined) |ternary('true', 'false'), 'false')}} | tee -a {{log_var}}"
        #   delegate_to: localhost
        #   tags:
        #     - always

        - name: результат прохождения проверок
          set_fact:
            task_result: "{% set passed = ( ( not var_group_exists.rc | bool ) and ( var_group_empty.rc | bool )) %}{{passed}}"
          tags:
            - wheel_2

        - include_tasks: ../summary/sum.yml
          vars:
            task_tag: "{% set tg = 'wheel_2' %}{{ tg }}"
            task_res: "{{ task_result }}"
          tags:
            - wheel_2

      rescue:

        - include_tasks: ../summary/rescue.yml
          vars:
            task_tag_rescue: "{% set tgr = 'wheel_2' %}{{tgr}}"
          tags:
            - always