---
    - block:
      
        - name: ПУД 1 | Сохранить список пользователей в переменную
          become: yes
          raw: 'getent passwd | grep -v "nologin" | grep -v "false" | cut -d: -f1 | sort -n '
          register: var_get_userlist
          tags:
            - loc_user_list

        - name: фильтрация списка пользователей
          set_fact:
            var_getent_passwd: "{{ var_get_userlist.stdout | regex_replace('^[\\r\\n\\t]+','') | regex_replace('[\\r\\n\\t]+$','') | regex_replace('[\\r\\n\\t]+','\n') }}"
          tags:
            - loc_user_list

        - name: группировка
          set_fact:
            var_userlist: "{{ var_userlist | default([]) + [ item | trim ] }}"
          with_items: "{{ (var_getent_passwd).split('\n') }}"
          tags:
            - loc_user_list

        - name: ПУД 1 | Сохраниение эталонного списка в переменную
          become: yes
          command: sort -n "{{ playbook_dir }}/files/tmp/user_list"  #Вывод отсортированного по алфавиту списка эталонных пользователей
          delegate_to: localhost
          register: var_get_userlist_etalon # сохранение выводва в переменную
          tags:
            - loc_user_list

        - name: ПУД 1 | Сохранение содержимого "переменных списков" в виде списка
          become: yes
          set_fact:
            var_userlist_not_in_etalon: "{{ var_userlist | difference(var_get_userlist_etalon.stdout_lines)}}" # строки "списка пользователей" НЕ содержащиеся в "эталоном списке"
          tags:
            - loc_user_list

        - name: ПУД 1 | Вывод локальных пользователей НЕ содержащихся в эталонном списке user_list
          debug: 
            msg: 
              - "     "
              - "--------------------------------------------------"
              - "{{ var_userlist_not_in_etalon }}"          # кол-во строк
              - "--------------------------------------------------"
          # when: var_get_userlist # исполнение TASK, если "cписок пользователей" не пустой
          tags:
            - loc_user_list
            - write_log

        - name: результат прохождения проверок
          set_fact:
            task_result: "{% set tg = (var_userlist_not_in_etalon == []) %}{{ tg }}"
          tags:
            - loc_user_list

        - include_tasks: ../summary/sum.yml
          vars:
            task_tag: "{% set tg = 'loc_user_list' %}{{ tg }}"
            task_res: "{{ task_result }}"
          tags:
            - loc_user_list

      rescue:

        - include_tasks: ../summary/rescue.yml
          vars:
            task_tag_rescue: "{% set tgr = 'loc_user_list' %}{{tgr}}"
          tags:
            - always