---
    - block:
    
        - name: ПУД1 | формируем список непустых групп пользователей
          # shell: 'getent group |cut -d: -f1 | sort -n ' # старая
          raw: 'getent group | egrep -v "^.+:.+:.+:$"  | cut -d: -f1 | sort -n ' # все с не пустым 4-м полем
          register: var_get_grouplist
          tags:
            - loc_group_list

        - name: фильтрация списка пользователей
          set_fact:
            var_groups: "{{ var_get_grouplist.stdout | regex_replace('^[\\r\\n\\t]+','') | regex_replace('[\\r\\n\\t]+$','') | regex_replace('[\\r\\n\\t]+','\n') }}"
          tags:
            - loc_group_list

        - name: группировка
          set_fact:
            var_grouplist: "{{ var_grouplist | default([]) + [ item | trim ] }}"
          with_items: "{{ (var_groups).split('\n') }}"
          tags:
            - loc_group_list

        - name: ПУД1 | Сохранение эталонного списка групп в переменную
          become: yes
          command: sort -n "{{ playbook_dir }}/files/tmp/group_list"  # Вывод отсортированного по алфавиту списка групп эталонных пользователей
          delegate_to: localhost
          register: var_get_grouplist_etalon # сохранение выводва в переменную
          tags:
            - loc_group_list

        - name: ПУД1 | Сохранение содержимого "переменных списков групп" в виде списка
          become: yes
          set_fact:
            var_usergroup_not_in_etalon: "{{ var_grouplist | difference(var_get_grouplist_etalon.stdout_lines) }}" # строки "списка пользователей" НЕ содержащиеся в "эталоном списке"
          tags:
            - loc_group_list

        - name: ПУД1 | Вывод локальных групп НЕ содержащихся в эталонном списке групп group_list
          debug: 
            msg: 
              - "--------------------------------------------------"
              - "{{ var_usergroup_not_in_etalon }}"          # 
              - "--------------------------------------------------"
          when: var_get_grouplist # исполнение TASK, если "cписок групп пользователей" не пустой
          tags:
            - loc_group_list
            - write_log

        # - name: summary +
        #   shell: "printf '%-20s %15s\n' 'loc_group_list => ' {{(var_usergroup_not_in_etalon == []) | ternary('true', 'false')}} | tee -a  {{log_var}}"
        #   delegate_to: localhost
        #   tags:
        #     - always

        - name: результат прохождения проверок
          set_fact:
            task_result: "{% set tg = (var_usergroup_not_in_etalon == []) %}{{ tg }}"
          tags:
            - loc_group_list

        - include_tasks: ../summary/sum.yml
          vars:
            task_tag: "{% set tg = 'loc_group_list' %}{{ tg }}"
            task_res: "{{ task_result }}"
          tags:
            - loc_group_list

      rescue:

        - include_tasks: ../summary/rescue.yml
          vars:
            task_tag_rescue: "{% set tgr = 'loc_group_list' %}{{tgr}}"
          tags:
            - always