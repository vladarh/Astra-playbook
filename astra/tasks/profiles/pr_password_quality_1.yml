---

    - name: ПР | файл есть
      become: yes
      stat: path=/etc/login.defs
      register: var_swap_exists
      failed_when: not var_swap_exists.stat.exists
      tags:
        - pr_password_quality_1
        
    - name: ПР | параметры эталонного локального пароля /etc/login.defs
      become: yes
      shell: 'egrep "^[[:space:]]*{{item[0] | quote}}[[:space:]]+{{item[1] | quote}}[[:space:]]*" /etc/login.defs'
      # shell: " echo {{ item[0]}}{{ item[1]}}"
      failed_when: false
      ignore_errors: true
      loop: "{{ profile_login_defs_var }}"
      register: var_pr_password_quality_1
      tags:
        - pr_password_quality_1
        - write_log

    - name: ПР | проверка параметров пароля /etc/login.defs
      debug:
        msg: 
          - "  "
          - "------------------------------|||---------------------  "
          - "---->>>> {{item[0][0]}} {{'%-4s' | format(item[0][1])}} : {{ (item[1].stdout_lines != []) | ternary('yes', 'no')}} <<<<----------------"
          - "------------------------------^^----------------------  "
          - "  "
      ignore_errors: true
      loop: "{{ profile_login_defs_var[:] | zip(var_pr_password_quality_1.results) | list}}"
      loop_control:
        label: "login.defs"
      tags:
        - pr_password_quality_1
        - write_log

    - name: ПР | загрузка файла
      ignore_errors: true
      fetch:
        flat: yes
        dest: "{{playbook_dir}}/all_info/{{ansible_ssh_host}}/"
        src: "/etc/login.defs"
      tags:
        - pr_password_quality_1

      
    - name: summary +
      shell: "printf '%-20s %15s\n' 'pr_password_quality_1 => ' {{('нет' in ad_group_list.results.stdout_lines[:]) | ternary('1', '0')}} | tee -a  {{log_var}}"
      delegate_to: localhost
      tags:
        - alway