---
    - block:

        - name: ПУД 1 | Сохранить список групп в sssd с разрешённым входом
          become: yes
          raw: "grep ^simple_allow_groups /etc/sssd/sssd.conf | sed 's/^.*=[[:space:]]*//' | tr ',' '\n' | sort -n "
          failed_when: var_get_allowed_group.rc not in [0, 1] 
          no_log: true
          register: var_get_allowed_group
          tags:
            - ad_group_list

        - name: фильтрация списка групп
          set_fact:
            var_glg: "{{ var_get_allowed_group.stdout | regex_replace('^[\\r\\n\\t]+','') | regex_replace('[\\r\\n\\t]+$','') | regex_replace('[\\r\\n\\t]+','\n') }}"
          tags:
            - ad_group_list

        - name: группировка
          set_fact:
            var_allowed_groups: "{{  var_allowed_groups | default([]) + [ item | trim ]  }}"
          with_items: "{{ (var_glg).split('\n') }}"
          tags:
            - ad_group_list

        - name: ПУД 1 | Список групп в разрешённым входом /etc/sssd/sssd.conf
          debug:
            msg: 
              - "     "
              - "--------------------------------------------------"
              - "{{ var_allowed_groups }}"
              - "--------------------------------------------------"
          tags:
            - ad_group_list
            - write_log

        - name: ПУД 1 | Сохранение эталонного списка групп с разрешённым входом
          become: yes
          command: sort -n "{{ playbook_dir }}/files/tmp/ad_group"  # отсортированного по алфавиту списка эталонных групп
          delegate_to: localhost
          register: var_group_etalon # сохранение вывода в переменную
          tags:
            - ad_group_list

        - name: эталон
          debug: 
            msg: 
              - "{{ var_group_etalon.stdout_lines }}"
          tags:
            - ad_group_list
      
        - name: ПУД 1 | Сохранение содержимого "переменных списков" в виде списка
          become: yes
          set_fact:
            var_allowed_group_not_in_etalon: "{{ var_allowed_groups | difference(var_group_etalon.stdout_lines)}}" # строки "списка разрешенных групп" НЕ содержащиеся в "эталоном списке разрешённых"
          tags:
            - ad_group_list
      
        - name: ПУД 1 | Список групп НЕ содержащихся в эталонном списке ad_group
          debug: 
            msg: 
              - "     "
              - "--------------------------------------------------"
              - "{{ var_allowed_group_not_in_etalon }}"          # кол-во строк
              - "--------------------------------------------------"
          tags:
            - ad_group_list
            - write_log

        - name: результат прохождения проверок
          set_fact:
            task_result: "{% set tg = (var_allowed_group_not_in_etalon == []) %}{{ tg }}"
          tags:
            - ad_group_list

        - include_tasks: ../summary/sum.yml
          vars:
            task_tag: "{% set tg = 'ad_group_list' %}{{ tg }}"
            task_res: "{{ task_result }}"
          tags:
            - ad_group_list

      rescue:

        - include_tasks: ../summary/rescue.yml
          vars:
            task_tag_rescue: "{% set tgr = 'ad_group_list' %}{{tgr}}"
          tags:
            - always