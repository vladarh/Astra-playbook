--- 
    # проверка № 19

    - block:

        - name: ПУД1 | проверка, что файл "/etc/securetty" есть
          become: yes
          raw: "test -f /etc/securetty"
          failed_when: var_file_exists.rc
          register: var_file_exists
          tags:
            - securetty

        - name: ПУД1 | проверка, что файл "/etc/securetty" пуст
          become: yes
          # raw: "! egrep -q '[^[:space:]]' /etc/securetty"       # проверка что файл не содержит видимых символов  (смотреть на код rc == 0)
          # raw: "awk 'NF {exit 1}' /etc/securetty"               # проверка что файл не содержит видимых символов  (смотреть на код rc == 0)
          raw: "test -s /etc/securetty"                           # проверка что размер файла равен 0               (смотреть на код rc == 1)
          failed_when: var_file_is_empty.rc not in [0, 1]
          register: var_file_is_empty
          tags:
            - securetty

        - name: ПУД1 | проверка, что файл "/etc/securetty" пуст
          debug: 
            msg: 
              - "---------------------------------------------------"
              - "файл /etc/securetty пуст: {{ (var_file_is_empty.rc ) | ternary('да', 'нет') }}"
              - "---------------------------------------------------"
          tags:
            - securetty
            - write_log

        # - name: ПУД1 | запись содержимого в файл
        #   become: yes
        #   shell: "cat /etc/securetty"
        #   register: var_securetty_output
        #   tags:
        #     - securetty

        # - name: ПУД1 | печать что директория пустая
        #   debug: 
        #     msg: 
        #       - "---------------------------------------------------"
        #       - "/etc/securetty content: "
        #       - "{{ (var_securetty_output.stdout_lines) }}"
        #       - "---------------------------------------------------"
        #   when: var_file_is_empty is defined
        #   tags:
        #     - securetty

        # - name: save host ip
        #   become: yes
        #   shell: "echo {{ansible_ssh_host}}"
        #   register: var_host_ip
        #   tags:
        #     - securetty

        - name: результат прохождения проверок
          set_fact:
            task_result: "{% set passed = ( var_file_is_empty.rc | bool ) %}{{ passed }}"
          tags:
            - securetty

        - include_tasks: ../summary/sum.yml
          vars:
            task_tag: "{% set tg = 'securetty' %}{{ tg }}"
            task_res: "{{ task_result }}"
          tags:
            - securetty

    # выгружать содержимое или список?

      rescue:

        - include_tasks: ../summary/rescue.yml
          vars:
            task_tag_rescue: "{% set tgr = 'securetty' %}{{ tgr }}"
          tags:
            - always