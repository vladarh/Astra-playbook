---
   # проверяемые строки /etc/pam.d/common-password
   # password required pam_pwhistory.so remember=24
   # pam_unix.so sha512 shadow use_authtok

    - block:
            
        - name: ПУД1 | проверка, что файл "/etc/pam.d/common-password" есть
          become: yes
          raw: "test -f /etc/pam.d/common-password"
          failed_when: var_file_exists.rc
          register: var_file_exists
          tags:
            - common_password

        - name: ПУД1 | проверка сопадения с эталоном строк 
          become: yes
          raw: "{{item}}"
          loop:
            - "{{pswd_auth_1}}"
            - "{{pam_unix_1}}"
            - "{{pam_unix_2}}"
          no_log: true
          failed_when: var_passwords_active.rc not in [0, 1]
          register: var_passwords_active
          tags:
            - common_password

        - name: ПУД1 | проверка наличия и активности локальных параметров пароля в /etc/pam.d/common-password
          debug: 
            msg: 
              - "  "
              - "----------------------------------------------------  "
              - "-- {{item.0}} => {{(not ((item.1).rc)) | ternary('да', 'нет')}}"
              - "----------------------------------------------------  "
          loop: "{{ (etalon_params) | zip(var_passwords_active.results) | list }}"
          loop_control:
            label: 'params'
          tags:
            - common_password
            - write_log

        - name: ПУД1 | проверка совпадения параметров локального пароля с эталонным значением
          become: yes
          raw: "echo {{ (var_passwords_active.results)[2].stdout  | trim }} | egrep {{ params_regex }}"
          loop: "{{pwquality_var}}"
          failed_when: var_passwords_params.rc not in [0, 1]
          register: var_passwords_params
          tags:
            - common_password

        - name: ПУД1 | проверка совпадения параметров локального пароля с эталонным значением
          debug: 
            msg: 
              - "  "
              - "----------------------------------------------------  "
              - "-->> '{{ (item.0)[:] | join(' ') }}' => {{ ( not item.1.rc ) | ternary('да', 'нет') }}              "
              - "----------------------------------------------------  "
          loop: "{{(pwquality_var) | zip(var_passwords_params.results) | list}}"
          loop_control:
            label: 'params'
          tags:
            - common_password
            - write_log

        - name: результат прохождения проверок
          set_fact:
            task_result: "{% set passed = ( task_result1 and task_result2 ) %}{{ passed }}"
          vars:
            task_result1: "{% set passed1 = ( ( var_passwords_active.results )[:] | map(attribute='rc') | list |  max == 0  ) %}{{ passed1 }}"
            task_result2: "{% set passed2 = ( ( var_passwords_params.results )[:] | map(attribute='rc') | list |  max == 0  ) %}{{ passed2 }}"
          tags:
            - common_password

        - include_tasks: ../summary/sum.yml
          vars:
            task_tag: "{% set tg = 'common_password' %}{{ tg }}"
            task_res: "{{ task_result }}"
          tags:
            - common_password

      rescue:

        - include_tasks: ../summary/rescue.yml
          vars:
            task_tag_rescue: "{% set tgr = 'common_password' %}{{ tgr }}"
          tags:
            - always